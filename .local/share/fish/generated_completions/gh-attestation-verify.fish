# gh-attestation-verify
# Autogenerated from man page /usr/share/man/man1/gh-attestation-verify.1.gz
complete -c gh-attestation-verify -s b -l bundle -d 'Path to bundle on disk, either a single bundle in a JSON file or a JSON lines…'
complete -c gh-attestation-verify -l bundle-from-oci -d 'When verifying an OCI image, fetch the attestation bundle from the OCI regist…'
complete -c gh-attestation-verify -l cert-identity -d 'Enforce that the certificate\'s subject alternative name matches the provided …'
complete -c gh-attestation-verify -s i -l cert-identity-regex -d 'Enforce that the certificate\'s subject alternative name matches the provided …'
complete -c gh-attestation-verify -l cert-oidc-issuer -d 'Issuer of the OIDC token'
complete -c gh-attestation-verify -l custom-trusted-root -d 'Path to a trusted_root. jsonl file; likely for offline verification'
complete -c gh-attestation-verify -l deny-self-hosted-runners -d 'Fail verification for attestations generated on self-hosted runners'
complete -c gh-attestation-verify -s d -l digest-alg -d 'The algorithm used to compute a digest of the artifact: {sha256|sha512}'
complete -c gh-attestation-verify -l format -d 'Output format: {json}'
complete -c gh-attestation-verify -l hostname -d 'Configure host to use'
complete -c gh-attestation-verify -s q -l jq -d 'Filter JSON output using a jq expression'
complete -c gh-attestation-verify -s L -l limit -d 'Maximum number of attestations to fetch'
complete -c gh-attestation-verify -l no-public-good -d 'Do not verify attestations signed with Sigstore public good instance'
complete -c gh-attestation-verify -s o -l owner -d 'GitHub organization to scope attestation lookup by'
complete -c gh-attestation-verify -l predicate-type -d 'Filter attestations by provided predicate type'
complete -c gh-attestation-verify -s R -l repo -d 'Repository name in the format /'
complete -c gh-attestation-verify -l signer-repo -d 'Repository of reusable workflow that signed attestation in the format /'
complete -c gh-attestation-verify -l signer-workflow -d 'Workflow that signed attestation in the format [host/]////'
complete -c gh-attestation-verify -s t -l template -d 'Format JSON output using a Go template; see "gh help formatting" EXIT CODES 0…'

